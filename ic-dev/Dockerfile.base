FROM rust:1.60-slim-bullseye

ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get update
RUN apt-get -y full-upgrade

# Some of this dependencies are required to build Dfinity canisters
RUN apt-get install -y \
pkg-config curl git gzip tar pigz \
build-essential cmake \
libssl-dev clang liblmdb-dev \
csvkit \
python3 pipenv

RUN apt-get clean

# In a case if you would require some python packages
RUN python3 -m pip install --upgrade pip

ENV WORK_DIR=/workspace
ENV HOME=/workspace

RUN mkdir -p $WORK_DIR
WORKDIR $WORK_DIR

# Rust
RUN cargo install ic-cdk-optimizer
RUN rustup component add clippy rustfmt
RUN rustup target add wasm32-unknown-unknown

# Dfinity SDK
ARG motoko_version=0.6.25
ARG dfx_version=0.9.3
ARG DFX_DEV_IDENTITY=ic_dev_identity
ARG DFX_DEV_ACCOUNT_IDENTITY=ic_dev_account

ENV DFX_DEV_IDENTITY=${DFX_DEV_IDENTITY}
ENV DFX_DEV_ACCOUNT_IDENTITY=${DFX_DEV_ACCOUNT_IDENTITY}

# RUN curl -fsSL https://download.dfinity.systems/motoko/${motoko_version}/x86_64-linux/motoko-${motoko_version}.tar.gz | tar -xz -C /opt/bin && chmod +x /opt/bin/moc
RUN curl -fsSL https://github.com/dfinity/motoko/releases/download/${motoko_version}/motoko-linux64-${motoko_version}.tar.gz \
| tar -xz -C /usr/local/bin && chmod +x /usr/local/bin

RUN DFX_VERSION=${dfx_version} sh -ci "$(curl -fsSL https://sdk.dfinity.org/install.sh)"

RUN dfx identity new $DFX_DEV_ACCOUNT_IDENTITY
RUN dfx identity new $DFX_DEV_IDENTITY
RUN dfx identity use $DFX_DEV_IDENTITY

# Cleaning cache
RUN rm -rf $CARGO_HOME/registry

# Make it possible to run from any user
RUN chmod -R 0777 .cache
RUN chmod -R 0777 .config
RUN chown root:root /usr/local/bin/*
RUN chmod -R 0755 /usr/local/bin
