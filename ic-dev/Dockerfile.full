ARG BASE_IMAGE=ghcr.io/infinity-swap/ic-dev-base:latest
ARG IC_BIN_IMAGE=ghcr.io/infinity-swap/ic-bin:latest
ARG IFX_IMAGE=ghcr.io/infinity-swap/ifx-tool:latest
ARG IS20_IMAGE=ghcr.io/infinity-swap/is20-dev:latest

FROM $IC_BIN_IMAGE as ic_bin
FROM $IFX_IMAGE as ifx
FROM $IS20_IMAGE as is20

FROM $BASE_IMAGE
ARG WORK_DIR=$WORK_DIR

ENV DFX_WASMS_DIR=${WORK_DIR}/wasm
ENV DFX_DID_DIR=${WORK_DIR}/candid
ENV DFX_NEURONS_DIR=${WORK_DIR}/neurons

WORKDIR $WORK_DIR
RUN mkdir $DFX_WASMS_DIR
RUN mkdir $DFX_DID_DIR

# DFX env preparation
COPY neurons/* ${DFX_NEURONS_DIR}/
COPY dfx.json ${WORK_DIR}
COPY bin/* /usr/local/bin/

ENV IC_HOST=0.0.0.0:8000
ENV IC_URI=http://localhost:8000


# Pack external binaries
COPY --from=ic_bin --chown=root:root /ic/wasm $WORK_DIR/wasm
COPY --from=ic_bin --chown=root:root /ic/ic-nns-init /usr/local/bin/

COPY --from=ifx --chown=root:root /wrapped/ifx /usr/local/bin/

COPY --from=is20 --chown=root:root /wrapped/*.wasm $WORK_DIR/wasm/
COPY --from=is20 --chown=root:root /wrapped/*.did $WORK_DIR/candid/
RUN dfx-config-canister.sh is20_token is20_token.wasm is20_token.did
RUN dfx-config-canister.sh is20_factory is20_factory.wasm is20_factory.did


# Finishing stuff
# RUN chmod -R 0777 neurons
RUN chmod -R 0777 $DFX_WASMS_DIR
RUN chmod -R 0777 $DFX_DID_DIR
RUN chmod -R 0755 /usr/local/bin

RUN echo "Packed binaries" && ls -la /usr/local/bin

RUN echo "Packed modules" && ls -la $DFX_WASMS_DIR
RUN echo "Packed candid" && ls -la $DFX_DID_DIR

EXPOSE 8000

# This is how we should run in in downstream images
# CMD dfx start --host $IC_HOST
