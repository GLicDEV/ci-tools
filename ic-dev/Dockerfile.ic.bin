# Build binaries: ic-nss-init and wasms for IC environment
# Publish it in empty docker container for future reusage
ARG BASE_IMAGE=ghcr.io/infinity-swap/ic-dev-base:latest


FROM $BASE_IMAGE as ic_builder
ARG IC_BUILD_BRANCH=rebased-2022-02-17 
# Just a hack to use it in next ENV instructions
ARG WORK_DIR=$WORK_DIR

WORKDIR $WORK_DIR

RUN mkdir -p wasm

ENV ARTIFACTS_DIR=${WORK_DIR}/ic/artifacts
ENV IC_RS_WD=${WORK_DIR}/ic/rs

RUN mkdir /ic
RUN mkdir /ic/wasm

# Note we are using InfinitySwap fork instead original repo  https://github.com/dfinity/ic.git
RUN git clone --depth 1 https://github.com/infinity-swap/ic.git --branch=${IC_BUILD_BRANCH} ic

# Build NNS
RUN cd ${IC_RS_WD} && RUST_BACKTRACE=full cargo build --release --bin ic-nns-init
RUN ls ${IC_RS_WD}/target/release
RUN mv ${IC_RS_WD}/target/release/ic-nns-init /ic

# Build artifacts
ENV CARGO_TARGET_DIR=${WORK_DIR}/ic/rs/target
RUN cd ic/gitlab-ci/tools && RUST_BACKTRACE=full ./cargo-build-canisters ${ARTIFACTS_DIR}
RUN cd ${ARTIFACTS_DIR} && find *.gz | xargs -I {} gzip -df {}
RUN mv ${ARTIFACTS_DIR}/*.wasm /ic/wasm && ls -la /ic/wasm

# Now put files into scratch based image
FROM scratch

COPY --from=ic_builder /ic /ic
